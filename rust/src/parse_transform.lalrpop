//-*- rust -*-
//
// This parser is for the "transform" attribute in SVG.
// Its operataion and grammar are described here:
// https://www.w3.org/TR/SVG/coords.html#TransformAttribute

use std::str::FromStr;

use pt::cairo;
use pt::cairo::MatrixTrait;

grammar;

pub Transform: cairo::Matrix = {
    Matrix,
//    Translate,
//    Scale,
//    Rotate,
//    SkewX,
//    SkewY
};

pub Matrix: cairo::Matrix = "matrix" "(" <Num> comma? <Num> comma? <Num> comma? <Num> comma? <Num> comma? <Num> ")" =>
    cairo::Matrix::new (<>);

pub Translate: cairo::Matrix = {
    "translate" "(" <Num> ")" => cairo::Matrix::new (1.0, 0.0, 0.0, 1.0, <>, 0.0),
    "translate" "(" <Num> comma? <Num> ")" => cairo::Matrix::new (1.0, 0.0, 0.0, 1.0, <>)
};

pub Scale: cairo::Matrix = {
    "scale" "(" <Num> ")" => cairo::Matrix::new (<>, 0.0, 0.0, <>, 0.0, 0.0),
    "scale" "(" <sx: Num> comma? <sy: Num> ")" => cairo::Matrix::new (sx, 0.0, 0.0, sy, 0.0, 0.0),
};

pub Num: f64 = <s:r"[+-]?([0-9]*\.[0-9]+|[0-9]+(\.[0-9]*)?)([Ee][+-]?[0-9]+)?"> =>
    f64::from_str (s).unwrap ();

comma: () = ",";
